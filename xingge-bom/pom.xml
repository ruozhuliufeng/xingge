<?xml version="1.0" encoding="UTF-8"?>
<!--
    行歌项目 BOM (Bill of Materials) 依赖版本管理
    
    作用：
    1. 统一管理项目中所有依赖的版本号
    2. 避免不同模块间的版本冲突
    3. 简化子模块的依赖声明
    
    使用方式：
    在子模块的 pom.xml 中引入此 BOM：
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>tech.msop</groupId>
                <artifactId>xingge-bom</artifactId>
                <version>0.0.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    然后在 dependencies 中直接使用依赖，无需指定版本号
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- 当前模块信息 -->
    <groupId>tech.msop</groupId>
    <artifactId>xingge-bom</artifactId>
    <version>0.0.2</version>
    <name>xingge-bom</name>
    <description>行歌项目依赖版本管理 - 统一管理所有第三方依赖的版本号</description>
    <url>https://github.com/ruozhuliufeng/xingge</url>
    <packaging>pom</packaging>

    <!-- 基本属性定义 -->
    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- 版本属性定义 - 统一管理所有第三方依赖的版本号 -->
        <!-- ================================ Spring 生态系统 ================================ -->
        <!-- Spring Boot 2.7.18 - LTS版本，稳定可靠，支持Java 8-17 -->
        <spring-boot.version>2.7.18</spring-boot.version>
        <!-- Spring Cloud 2021.0.8 - 与Spring Boot 2.7.x兼容的稳定版本 -->
        <spring-cloud.version>2021.0.8</spring-cloud.version>
        <!-- Spring Cloud Alibaba 2021.0.5.0 - 与Spring Cloud 2021.0.x兼容 -->
        <spring-cloud-alibaba.version>2021.0.5.0</spring-cloud-alibaba.version>

        <!-- ================================ 数据库相关 ================================ -->
        <!-- MySQL 8.0.33 - 最新稳定版本，性能优化，安全性增强 -->
        <mysql.version>8.0.33</mysql.version>
        <!-- Druid 1.2.20 - 阿里巴巴数据库连接池，监控功能强大 -->
        <druid.version>1.2.20</druid.version>
        <!-- MyBatis Plus 3.5.4.1 - MyBatis增强工具，简化CRUD操作 -->
        <mybatis-plus.version>3.5.4.1</mybatis-plus.version>
        <!-- PageHelper 1.4.7 - MyBatis分页插件，支持多数据库 -->
        <pagehelper.version>1.4.7</pagehelper.version>

        <!-- ================================ 缓存相关 ================================ -->
        <!-- Redisson 3.24.3 - Redis Java客户端，支持分布式锁、集合等高级功能 -->
        <redisson.version>3.24.3</redisson.version>

        <!-- ================================ 工具类库 ================================ -->
        <!-- Hutool 5.8.22 - Java工具类库，简化开发 -->
        <hutool.version>5.8.22</hutool.version>
        <!-- FastJSON2 2.0.43 - 阿里巴巴JSON处理库，性能优异 -->
        <fastjson2.version>2.0.43</fastjson2.version>
        <!-- Knife4j 4.4.0 - Swagger UI增强版，API文档生成工具 -->
        <knife4j.version>4.4.0</knife4j.version>
        <!-- MapStruct 1.5.5.Final - Java Bean映射工具，编译时生成映射代码 -->
        <mapstruct.version>1.5.5.Final</mapstruct.version>

        <!-- ================================ 安全相关 ================================ -->
        <!-- JJWT 0.11.5 - Java JWT库，用于生成和验证JWT令牌 -->
        <jwt.version>0.11.5</jwt.version>
        <!-- BouncyCastle 1.76 - 加密算法库，提供各种加密解密功能 -->
        <bcprov.version>1.76</bcprov.version>

        <!-- ================================ 消息队列相关 ================================ -->
        <!-- RocketMQ 2.3.3 - Apache RocketMQ Spring Boot Starter最新稳定版本 -->
        <rocketmq.version>2.3.3</rocketmq.version>

        <!-- ================================ 监控相关 ================================ -->
        <!-- Micrometer 1.10.13 - 应用监控指标库，支持Prometheus等监控系统 -->
        <micrometer.version>1.10.13</micrometer.version>
        <xingge.version>0.0.2</xingge.version>
        <guava.version>30.0-jre</guava.version>
        <swagger.version>2.10.5</swagger.version>
        <swagger.models.version>1.6.2</swagger.models.version>
        <knife4j.version>2.0.9</knife4j.version>
        <mybatis.plus.version>3.5.1</mybatis.plus.version>
        <mybatis.plus.dynamic.version>3.3.6</mybatis.plus.dynamic.version>
        <protostuff.version>1.6.0</protostuff.version>
        <disruptor.version>3.4.2</disruptor.version>
        <logstash.version>6.2</logstash.version>
        <druid.version>1.2.8</druid.version>
        <jackson.version>2.11.4</jackson.version>
        <okhttp.version>4.9.3</okhttp.version>
        <jsoup.version>1.12.1</jsoup.version>

    </properties>

    <!-- 依赖管理 - 定义项目中所有依赖的版本，子模块可直接引用无需指定版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- ================================ Spring 生态系统 BOM ================================ -->
            <!-- Spring Boot 官方 BOM - 管理所有 Spring Boot 相关依赖的版本 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud 官方 BOM - 管理微服务相关组件版本（网关、配置中心、服务发现等） -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud Alibaba BOM - 管理阿里云微服务组件版本（Nacos、Sentinel、Seata等） -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- ================================ 数据库相关依赖 ================================ -->
            <!-- MySQL 数据库驱动 - 连接MySQL数据库的JDBC驱动 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!-- Druid 数据库连接池 - 阿里巴巴开源，提供监控、防SQL注入等功能 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- MyBatis Plus - MyBatis增强工具，提供通用CRUD、代码生成器等功能 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- PageHelper 分页插件 - MyBatis物理分页插件，支持多种数据库 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <!-- ================================ 缓存相关依赖 ================================ -->
            <!-- Redisson - Redis Java客户端，支持分布式锁、分布式集合、分布式对象等高级功能 -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <!-- ================================ 消息队列相关依赖 ================================ -->
            <!-- RocketMQ - Apache RocketMQ Spring Boot Starter -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq.version}</version>
            </dependency>

            <!-- ================================ 工具类库依赖 ================================ -->
            <!-- Hutool - Java工具类库，包含加密解密、转换、日期、各种Util等 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- Apache Commons Collections4 - 集合工具类 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.4</version>
            </dependency>
            <!-- Http -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <!-- Knife4j - Swagger UI增强版，提供美观的API文档界面和在线调试功能 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!-- Guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- Swagger -->
            <!-- Swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.models.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-micro-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-ui</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!-- protostuff -->
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <!-- Validation - 版本由Spring Boot BOM管理 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!-- ================================ 项目内部模块依赖 ================================ -->
            <!-- 项目核心模块 - 提供基础工具类和通用功能 -->
            <dependency>
                <groupId>tech.msop</groupId>
                <artifactId>xingge-core-auto</artifactId>
                <version>${xingge.version}</version>
            </dependency>
            <dependency>
                <groupId>tech.msop</groupId>
                <artifactId>xingge-core-tool</artifactId>
                <version>${xingge.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <!-- GPG签名插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 中央仓库发布插件 -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.8.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                    <autoPublish>false</autoPublish>
                    <waitUntil>validated</waitUntil>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 分发管理配置 -->
    <distributionManagement>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://central.sonatype.com/api/v1/publisher/deployments/upload</url>
        </repository>
        <snapshotRepository>
            <id>central</id>
            <name>Central Repository Snapshots</name>
            <url>https://central.sonatype.com/api/v1/publisher/deployments/upload</url>
        </snapshotRepository>
    </distributionManagement>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/ruozhuliufeng/xingge.git</connection>
        <developerConnection>scm:git:ssh://github.com:ruozhuliufeng/xingge.git</developerConnection>
        <url>https://github.com/ruozhuliufeng/xingge/tree/main</url>
    </scm>
    <developers>
        <developer>
            <id>ruozhuliufeng</id>
            <name>若竹流风</name>
            <email>ruozhuliufeng@aixuxi.cn</email>
            <roles>
                <role>Java Development Engineer</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
    </developers>
</project>